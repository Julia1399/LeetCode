/**
 * @param {any} o1
 * @param {any} o2
 * @return {boolean}
 */
var areDeeplyEqual = function(o1, o2) {
  const type1 = Object.prototype.toString.call(o1);
  const type2 = Object.prototype.toString.call(o2);
    console.log(type1)
  if (type1 !== type2) {
    return false;
  }
  
  if (type1 !== '[object Object]' && type1 !== '[object Array]') {
    return o1 === o2;
  }

  const keys1 = Object.keys(o1);
  const keys2 = Object.keys(o2);

  if (keys1.length !== keys2.length) {
    return false;
  }

  for (let key of keys1) {
    if (!o2.hasOwnProperty(key)) {
      return false;
    }

    if (!areDeeplyEqual(o1[key], o2[key])) {
      return false;
    }
  }

  return true;
}
